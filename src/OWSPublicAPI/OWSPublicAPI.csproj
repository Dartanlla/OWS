<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <UserSecretsId>5f287243-b8be-4d52-a0d5-8c329ba8d881</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>OWSPublicAPI.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="Views\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Dapper" Version="2.1.28" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.1" />
    <PackageReference Include="Serilog.Enrichers.ClientInfo" Version="2.0.3" />
    <PackageReference Include="Serilog.Enrichers.CorrelationId" Version="3.0.1" />
    <PackageReference Include="Serilog.Enrichers.Environment" Version="2.3.0" />
    <PackageReference Include="Serilog.Exceptions" Version="8.4.0" />
    <PackageReference Include="Serilog.Extensions.Hosting" Version="8.0.0" />
    <PackageReference Include="Serilog.Formatting.Elasticsearch" Version="9.0.3" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="8.0.0" />
    <PackageReference Include="Serilog.Sinks.Async" Version="1.5.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="5.0.1" />
    <PackageReference Include="Serilog.Sinks.Http" Version="8.0.0" />
    <PackageReference Include="SimpleInjector" Version="5.4.4" />
    <PackageReference Include="SimpleInjector.Integration.AspNetCore.Mvc" Version="5.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.5.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\OWSData\OWSData.csproj" />
    <ProjectReference Include="..\OWSExternalLoginProviders\OWSExternalLoginProviders.csproj" />
    <ProjectReference Include="..\OWSShared\OWSShared.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="OWSPublicAPI.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Target Name="DockerComposeOverrideWindows" BeforeTargets="PreBuildEvent" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <ItemGroup>
      <DockerComposeOverrideFile Include="$(SolutionDir)\docker-compose.override.windows.yml" />
    </ItemGroup>
    <Copy SourceFiles="@(DockerComposeOverrideFile)" DestinationFiles="$(SolutionDir)\docker-compose.override.yml" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="DockerComposeOverrideOSX" BeforeTargets="PreBuildEvent" Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <ItemGroup>
      <DockerComposeOverrideFile Include="$(SolutionDir)\docker-compose.override.osx.yml" />
    </ItemGroup>
    <Copy SourceFiles="@(DockerComposeOverrideFile)" DestinationFiles="$(SolutionDir)\docker-compose.override.yml" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="DockerComposeOverrideLinux" BeforeTargets="PreBuildEvent" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <ItemGroup>
      <DockerComposeOverrideFile Include="$(SolutionDir)\docker-compose.override.linux.yml" />
    </ItemGroup>
    <Copy SourceFiles="@(DockerComposeOverrideFile)" DestinationFiles="$(SolutionDir)\docker-compose.override.yml" SkipUnchangedFiles="true" />
  </Target>
</Project>